name: Continous Integration for package sodium_libs_platform_interface

env:
  PACKAGE_NAME: sodium_libs_platform_interface

on:
  workflow_dispatch:
  push:
    branches:
      - "*"
    paths:
      - "packages/sodium_libs_platform_interface/**"
      - ".github/workflows/sodium_libs_platform_interface_ci.yaml"
  pull_request:
    branches:
      - "*"
    paths:
      - "packages/sodium_libs_platform_interface/**"
      - ".github/workflows/sodium_libs_platform_interface_ci.yaml"

defaults:
  run:
    working-directory: packages/sodium_libs_platform_interface

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux
          - windows
          - macos
          - web

        include:
          - platform: linux
            os: ubuntu-latest
            system: vm
          - platform: windows
            os: windows-latest
            system: vm
          - platform: macos
            os: macos-latest
            system: vm
          - platform: web
            os: ubuntu-latest
            system: js

    runs-on: ${{ matrix.os }}
    steps:
      - uses: subosito/flutter-action@v1
      - uses: actions/checkout@v2
      - uses: ./.github/actions/dependency_clean
        with:
          package: ${{ env.PACKAGE_NAME }}
      - run: flutter pub get
      - run: flutter analyze
      - run: flutter pub publish --dry-run

  release:
    runs-on: ubuntu-latest
    needs:
      - test
    if: github.ref == 'refs/heads/main'
    outputs:
      update: ${{ steps.version.outputs.update }}
      tag_name: ${{ steps.version.outputs.tag_name }}
    steps:
      - uses: subosito/flutter-action@v1
      - uses: actions/checkout@v2
      - uses: Skycoder42/action-dart-release@v1
        id: version
        with:
          src_dir: packages/${{ env.PACKAGE_NAME }}
      - name: Create Release
        if: steps.version.outputs.update == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.PACKAGE_NAME }}/v${{ steps.version.outputs.tag_name }}
          release_name: ${{ env.PACKAGE_NAME }} - ${{ steps.version.outputs.release_name }}
          body_path: ${{ steps.version.outputs.body_path }}

  deploy:
    runs-on: ubuntu-latest
    needs:
      - release
    if: needs.release.outputs.update == 'true'
    steps:
      - uses: subosito/flutter-action@v1
      - uses: actions/checkout@v2
      - uses: ./.github/actions/dependency_clean
        with:
          package: ${{ env.PACKAGE_NAME }}
      - run: flutter pub get
      - name: store credentials
        run: |
          mkdir -p ~/.pub-cache
          echo '${{ secrets.PUB_DEV_CREDENTIALS }}' > ~/.pub-cache/credentials.json
      - run: dart pub publish --force
      - name: clean up credentials
        if: always()
        run: shred -fzvu ~/.pub-cache/credentials.json

  doc:
    runs-on: ubuntu-latest
    needs:
      - release
    if: needs.release.outputs.update == 'true'
    steps:
      - uses: subosito/flutter-action@v1
      - uses: actions/checkout@v2
      - uses: ./.github/actions/dependency_clean
        with:
          package: ${{ env.PACKAGE_NAME }}
      - run: flutter pub get
      - run: dartdoc
      - name: upload doc
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: packages/${{ env.PACKAGE_NAME }}/doc/api
          commit_message: Updated documentation to v${{ needs.release.outputs.tag_name }}
          destination_dir: ${{ env.PACKAGE_NAME }}
