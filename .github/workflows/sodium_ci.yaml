name: Continous Integration for package sodium

on:
  push:
    branches:
      - "*"
    paths:
      - "packages/sodium/**"
      - ".github/workflows/sodium_ci.yaml"
  pull_request:
    branches:
      - "*"
    paths:
      - "packages/sodium/**"
      - ".github/workflows/sodium_ci.yaml"

defaults:
  run:
    working-directory: packages/sodium

jobs:
  test-vm:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest

    runs-on: ${{ matrix.os }}
    steps:
      - uses: dart-lang/setup-dart@v1
      - uses: actions/checkout@v2
      - run: make -f ../../Makefile get
      - run: make -f ../../Makefile analyze
      - run: make -f ../../Makefile unit-tests-vm-coverage
      # - run: make -f ../../Makefile integration-tests-vm
      - uses: VeryGoodOpenSource/very_good_coverage@v1.1.1
        with:
          path: packages/sodium/coverage/lcov.info
          min_coverage: 95
          exclude: |
            **/*.ffi.dart 
            **/*.js.dart 
      - run: make -f ../../Makefile publish-dry

  test-js:
    runs-on: ubuntu-latest
    steps:
      - uses: dart-lang/setup-dart@v1
      - run: sudo apt-get install chromium-browser
      - uses: actions/checkout@v2
      - run: make -f ../../Makefile get
      - run: make -f ../../Makefile unit-tests-js-coverage
      # - run: make -f ../../Makefile integration-tests-js
      - uses: VeryGoodOpenSource/very_good_coverage@v1.1.1
        with:
          path: packages/sodium/coverage/lcov.info
          min_coverage: 95
          exclude: |
            **/*.ffi.dart 
            **/*.js.dart 

  release:
    runs-on: ubuntu-latest
    needs:
      - test-vm
      - test-js
    if: github.ref == 'refs/heads/master'
    outputs:
      update: ${{ steps.version.outputs.update }}
      tag_name: ${{ steps.version.outputs.tag_name }}
    steps:
      - uses: dart-lang/setup-dart@v1
      - uses: actions/checkout@v2
      - uses: Skycoder42/action-dart-release@v1
        id: version
      - name: Create Release
        if: steps.version.outputs.update == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.tag_name }}
          release_name: ${{ steps.version.outputs.release_name }}
          body_path: ${{ steps.version.outputs.body_path }}

  deploy:
    runs-on: ubuntu-latest
    needs:
      - release
    if: needs.release.outputs.update == 'true'
    steps:
      - uses: dart-lang/setup-dart@v1
      - uses: actions/checkout@v2
      - run: make -f ../../Makefile get
      - name: store credentials
        run: |
          mkdir -p ~/.pub-cache
          echo '${{ secrets.PUB_DEV_CREDENTIALS }}' > ~/.pub-cache/credentials.json
      - run: make -f ../../Makefile publish
      - name: clean up credentials
        if: always()
        run: shred -fzvu ~/.pub-cache/credentials.json

  doc:
    runs-on: ubuntu-latest
    needs:
      - release
    if: needs.release.outputs.update == 'true'
    steps:
      - uses: dart-lang/setup-dart@v1
      - uses: actions/checkout@v2
      - run: make -f ../../Makefile get
      - run: make -f ../../Makefile doc
      - name: upload doc
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: doc/api
          commit_message: Updated documentation to v${{ needs.release.outputs.tag_name }}
